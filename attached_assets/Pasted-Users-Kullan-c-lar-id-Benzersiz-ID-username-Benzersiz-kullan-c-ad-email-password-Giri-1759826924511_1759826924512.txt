Users (Kullanıcılar):

_id (Benzersiz ID)

username (Benzersiz kullanıcı adı)

email, password (Giriş bilgileri)

name, bio, location

social_links: (JSON/Array): [{ platform: "instagram", url: "..." }, ...]

primary_vehicle_id (Garajdaki araç ID'sine referans)

crew_id (JSON/Array: Kullanıcının ait olduğu Crew ID'leri)

vip_status (Boolean/String: VIP üyeliği durumu)

Vehicles (Araçlar/Garaj):

_id

owner_id (Kullanıcı ID'sine referans)

make, model, year, license_plate

photos: (Array of URLs)

technical_details: (JSON: HP, Tork, Mod Listesi)

social_tag (Araca özel hashtag/Instagram)

Moments (Anlar/Gönderiler):

_id

user_id (Gönderi sahibine referans)

caption (Metin)

image_url (Yüklenen fotoğrafın URL'si)

timestamp

likes_count (Beğeni sayısı)

comments_count (Yorum sayısı)

Likes (Beğeniler):

_id

moment_id (Hangi gönderinin beğenildiğine referans)

user_id (Kim tarafından beğenildiğine referans)

Comments (Yorumlar):

_id

moment_id

user_id

text

timestamp

Crews (Ekipler):

_id

name, description, logo_url

creator_id

members: (Array of User IDs)

chat_channel_id (Sohbet kanalına referans)

Görev 2: Temel Backend API Yapısı
Gerekli CRUD (Oluşturma, Okuma, Güncelleme, Silme) operasyonları için bir RESTful API veya GraphQL yapısı kurun. Node.js/Express, Python/Flask/Django veya Replit'in desteklediği uygun bir backend çerçevesini kullanın.

II. Kritik Fonksiyonların Aktifleştirilmesi
A. Moments (Anlar) Akışı ve Etkileşimler (Çok Kritik)
Post Oluşturma (Fotoğraf Yükleme ve Yayınlama):

Frontend: MOMENTS ekranında bir Post Oluştur butonu (+ veya benzeri bir ikon) ekleyin.

Modal/Sayfa: Tıklandığında kullanıcıdan fotoğraf seçmesini (Mobil cihazlarda kamera veya galeri seçeneği sunulmalı) ve bir açıklama (caption) girmesini isteyen bir modal veya form açın.

Backend: Fotoğraf dosyalarını kabul edecek bir dosya yükleme (File Upload) endpoint'i oluşturun. (Öneri: Cloudinary gibi bir bulut depolama hizmeti veya Replit'in sunucu tarafı depolaması kullanılmalı).

Veritabanı İşlemi: Yüklenen fotoğrafın URL'sini ve gönderi verilerini (user_id, caption, timestamp, vb.) Moments tablosuna kaydedin.

Beğeni (Like) Sistemi:

Frontend: Her Moments gönderisine bir Kalp Simgesi ekleyin. Tıklandığında Neon Sarı renge dönerek anlık geri bildirim versin.

Backend API:

/api/moments/:id/like endpoint'i oluşturun.

Kullanıcının o gönderiyi daha önce beğenip beğenmediğini kontrol edin.

Eğer beğenmediyse, Likes tablosuna yeni bir kayıt ekleyin ve Moments tablosundaki likes_count değerini 1 artırın.

Eğer beğendiyse, Likes tablosundan kaydı silin ve likes_count değerini 1 azaltın (Toggle/Aç-Kapa işlevi).

Yorum (Comment) Sistemi:

Frontend: Her Moments gönderisinin altında bir yorum alanı (input) ve Gönder butonu ekleyin.

Backend API:

/api/moments/:id/comment endpoint'i oluşturun.

Gelen yorum metnini, user_id ve moment_id bilgileriyle birlikte Comments tablosuna kaydedin.

Moments tablosundaki comments_count değerini 1 artırın.

Görüntüleme: Her gönderinin altında, o gönderiye ait yorumları kronolojik sırada (user_id üzerinden kullanıcı adı da çekilerek) listeleyin.

B. Profil ve Sosyal Bağlantılar
Profil Kartı Geçişi: Profil sayfasındaki ana kartın ön yüz (Profil Fotoğrafı/Araç) ve arka yüzü (Biyografi/Sosyal Bağlantılar) arasında kaydırma veya tıklandığında yumuşak bir 3D Çevirme (Flip) animasyonu ile geçiş yapmasını sağlayın.

Sosyal Medya Bağlantı Yönetimi:

Frontend: Profil Düzenleme formunda, Link Ekle (+ Simgesi) butonu ile bir modal açın.

Modal: Kullanıcının Platform Adı (Instagram, TikTok vb.) ve URL girmesini sağlayın.

Backend API: Bu verileri kullanıcının Users tablosundaki social_links alanına (Array/JSON formatında) kaydedin.

Silme/Düzenleme: Her ekli bağlantının yanında, çalışır durumda Düzenle ve Sil butonları ile anlık ve kalıcı güncelleme/silme işlemleri yapın.

C. Garaj ve 3D Plaka Motoru (Çok Kritik)
Araç Ekleme Akışı:

Frontend: GARAGE sayfasındaki ARAÇ EKLE + butonu, planlanan 5 Adımlı formu (Marka, Plaka, Fotoğraf, Teknik, Sosyal) açmalıdır.

Backend API: Her adımın verisi toplanmalı ve son adımda Vehicles tablosuna tam bir kayıt olarak eklenmelidir (owner_id referansıyla).

3D Plaka Render Motoru:

Konsept: Plaka metnini alan ve görsel olarak döndüren dinamik bir görüntü oluşturun.

Teknoloji Seçimi: Bu en iyi şekilde HTML Canvas veya basit CSS 3D Dönüşümleri (transform: rotateY, box-shadow ile kabartma, text-shadow ile neon/krom efekti) kullanılarak simüle edilebilir. Gerçek 3D render için Three.js gibi bir kütüphane gerekebilir, ancak basit bir CSS tabanlı simülasyon başlangıç için yeterli olacaktır.

Şablonlar: Türkiye (TR), Almanya (DE) ve ABD (US) plakaları için farklı CSS stilleri hazırlayın ve kullanıcının seçimine göre uygulayın.

III. Navigasyon ve İkincil Menülerin Tamamlanması
MENU Hub altındaki tüm fonksiyonları, planlandığı gibi grid menüden erişilebilir hale getirin ve temel işlevlerini tanımlayın:

Sekme Adı	Yapılacak İşlev (Çalışır Hale Getir)
SCAN	Mobil kamera/QR kod okuyucu arayüzünü açan bir simülasyon (Gerçek tarayıcı izni gerektirir).
SUPPORT	İletişim Formu (Ad, Konu, Mesaj) veya FAQ (Sık Sorulan Sorular) listesi olan bir sayfa açın.
VEHICLES	Liderlik Tablosu ekranını açın. Trending ve All Vehicles sekmeleri aktif olmalı. Sıralama için Moments gönderilerindeki toplam beğeni sayısını (snap_score) kullanın.
ALERT	Kullanıcının tüm bildirimlerinin (Yeni beğeni, yeni yorum, Crew daveti vb.) kronolojik olarak listelendiği bir Bildirim Geçmişi sayfası açın.
TOURS	Önceden planlanmış veya oluşturulmuş gezi rotalarının (Events ile entegre edilebilir) veya popüler rotaların listelendiği bir sayfa.
FRIENDS	Arkadaş listesi, Arkadaş Ekleme/Çıkarma ve Arkadaşlık İstekleri (Pending) listesinin yönetildiği bir sayfa.
CREWS	My Crew (Ekiplerim) ve Explore (Keşfet) sekmelerinin bulunduğu ana Crew sayfasını açın. Create a Crew butonu aktif olmalı ve veriyi Crews tablosuna kaydetmeli.
DRIVE	Harita görünümüne veya sürüş istatistiklerinin (Mesafe, Hız - Simülasyon) gösterildiği bir arayüze geçiş yapın.
SEARCH	Tüm uygulamada (Kullanıcılar, Araçlar, Etkinlikler, Crews) arama yapmayı sağlayan bir arama çubuğu ve sonuç listesi gösterin.

E-Tablolar'a aktar
IV. Tasarım Dili Entegrasyonu (Gözden Geçirme)
Glassmorphism: Tüm Kartlar/Paneller (Profil Kartı, Sohbet Balonu, Moments Postu) için %10-20 Opaklıkta** yarı saydamlık ve arkasındaki arka planı hafifçe bulanıklaştıran **backdrop-filter: blur(10px);`** kuralını uygulayın.

Neon Sarı Dengesi: Neon Sarıyı sadece aktifleştirilmiş butonlar, birincil başlıklar ve vurgu noktaları için kullanın. Butonlar için hover veya click anında anlık olarak tam opak sarıya geçiş efektini (feedback) uygulayın.

İkonlar: Tüm arayüzde (özellikle Tab Bar ve Menu Hub'da) Font Awesome veya Material Design Icons gibi modern, tutarlı bir ikon seti kullanın.